name: CI/CD Tata Devop

on:
  push:
    branches:
      - dev
      - prod

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 21
        uses: actions/setup-java@v2
        with:
          java-version: '21'

      - name: Cache Maven dependencies
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Install dependencies
        run: mvn install -DskipTests

      - name: Run Tests
        run: mvn test
        env:
          JAVA_HOME: ${{ steps.setup-java.outputs.java-home }}

      - name: Build Docker Image
        run: |
          docker build -t ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/tata-devop:${{ github.sha }} .
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        with:
          region: ${{ secrets.AWS_REGION }}

      - name: Push Docker Image to ECR
        run: |
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/tata-devop:${{ github.sha }}
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Setup kubectl
        uses: azure/setup-kubectl@v1

      - name: Deploy to Kubernetes (Dev)
        if: github.ref == 'refs/heads/dev'
        run: kubectl apply -f k8s/dev/deployment.yaml --namespace=dev

      - name: Deploy to Kubernetes (Prod)
        if: github.ref == 'refs/heads/prod'
        run: kubectl apply -f k8s/prod/deployment.yaml --namespace=prod
